[{"C:\\ToyProject\\FullStack\\BLOG\\frontend\\src\\index.js":"1","C:\\ToyProject\\FullStack\\BLOG\\frontend\\src\\App.js":"2","C:\\ToyProject\\FullStack\\BLOG\\frontend\\src\\components\\Home.js":"3","C:\\ToyProject\\FullStack\\BLOG\\frontend\\src\\components\\Category.js":"4","C:\\ToyProject\\FullStack\\BLOG\\frontend\\src\\components\\BlogDetail.js":"5","C:\\ToyProject\\FullStack\\BLOG\\frontend\\src\\components\\Blog.js":"6","C:\\ToyProject\\FullStack\\BLOG\\frontend\\src\\hocs\\Layout.js":"7","C:\\ToyProject\\FullStack\\BLOG\\frontend\\src\\components\\Navbar.js":"8"},{"size":198,"mtime":1638233201977,"results":"9","hashOfConfig":"10"},{"size":734,"mtime":1638427591351,"results":"11","hashOfConfig":"10"},{"size":603,"mtime":1638426504656,"results":"12","hashOfConfig":"10"},{"size":4119,"mtime":1638430127709,"results":"13","hashOfConfig":"10"},{"size":1425,"mtime":1638422324221,"results":"14","hashOfConfig":"10"},{"size":4996,"mtime":1638427635288,"results":"15","hashOfConfig":"10"},{"size":202,"mtime":1638236488135,"results":"16","hashOfConfig":"10"},{"size":1257,"mtime":1638355874700,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"z2sma",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\ToyProject\\FullStack\\BLOG\\frontend\\src\\index.js",[],["37","38"],"C:\\ToyProject\\FullStack\\BLOG\\frontend\\src\\App.js",[],"C:\\ToyProject\\FullStack\\BLOG\\frontend\\src\\components\\Home.js",[],"C:\\ToyProject\\FullStack\\BLOG\\frontend\\src\\components\\Category.js",["39","40"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\nconst Category = () => {\r\n    const [blogs, setBlogs] = useState([]);\r\n    const [currentCategory, setCurrentCategory] = useState('');\r\n    const capitalizeFirstLetter = (word) => {\r\n        if (word)\r\n            return word.charAt(0).toUpperCase() + word.slice(1);\r\n        return '';\r\n    };\r\n    const category = useParams().id;\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n        setCurrentCategory(capitalizeFirstLetter(category));\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n\r\n        const fetchData = async () => {\r\n            try {\r\n                const res = await axios.post(`http://127.0.0.1:8000/api/blog/category`, { category }, config);\r\n                setBlogs(res.data);\r\n            }\r\n            catch (err) {\r\n\r\n            }\r\n        };\r\n        fetchData();\r\n    }, [useParams().id]);\r\n\r\n    const getCategoryBlogs = () => {\r\n        let list = [];\r\n        let result = [];\r\n\r\n        blogs.map(blogPost => {\r\n            return list.push(\r\n                <div className=\"row no-gutters border rounded overflow-hidden flex-md-row mb-4 shadow-sm h-md-250 position-relative\">\r\n                    <div className=\"col p-4 d-flex flex-column position-static\">\r\n                        <strong className=\"d-inline-block mb-2 text-primary\">{capitalizeFirstLetter(blogPost.category)}</strong>\r\n                        <h3 className=\"mb-0\">{blogPost.title}</h3>\r\n                        <div className=\"mb-1 text-muted\">{blogPost.month} {blogPost.day}</div>\r\n                        <p className=\"card-text mb-auto\">{blogPost.excerpt}</p>\r\n                        <Link to={`/blog/${blogPost.slug}`} className=\"stretched-link\">Continue reading</Link>\r\n                    </div>\r\n                    <div className=\"col-auto d-none d-lg-block\">\r\n                        <img width='200' height='250' src={blogPost.thumbnail} alt='thumbnail' />\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        for (let i = 0; i < list.length; i += 2) {\r\n            result.push(\r\n                <div key={i} className='row mb-2'>\r\n                    <div className='col-md-6'>\r\n                        {list[i]}\r\n                    </div>\r\n                    <div className='col-md-6'>\r\n                        {list[i+1] ? list[i+1] : null}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    return (\r\n        <div className='container mt-3'>\r\n            <h3 className='display-4'>{currentCategory} Category</h3>\r\n            <div className=\"nav-scroller py-1 mb-2\">\r\n                <nav className=\"nav d-flex justify-content-between\">\r\n                    <Link className=\"p-2 text-muted\" to='/category/world'>World</Link>\r\n                    <Link className=\"p-2 text-muted\" to='/category/environment'>Environment</Link>\r\n                    <Link className=\"p-2 text-muted\" to='/category/technology'>Technology</Link>\r\n                    <Link className=\"p-2 text-muted\" to='/category/design'>Design</Link>\r\n                    <Link className=\"p-2 text-muted\" to='/category/culture'>Culture</Link>\r\n                    <Link className=\"p-2 text-muted\" to='/category/business'>Business</Link>\r\n                    <Link className=\"p-2 text-muted\" to='/category/politics'>Politics</Link>\r\n                    <Link className=\"p-2 text-muted\" to='/category/opinion'>Opinion</Link>\r\n                    <Link className=\"p-2 text-muted\" to='/category/science'>Science</Link>\r\n                    <Link className=\"p-2 text-muted\" to='/category/health'>Health</Link>\r\n                    <Link className=\"p-2 text-muted\" to='/category/style'>Style</Link>\r\n                    <Link className=\"p-2 text-muted\" to='/category/travel'>Travel</Link>\r\n                </nav>\r\n            </div>\r\n            {getCategoryBlogs()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Category;\r\n","C:\\ToyProject\\FullStack\\BLOG\\frontend\\src\\components\\BlogDetail.js",["41"],"import React, { useState, useEffect } from 'react';\r\nimport { Link , useParams} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst BlogDetail = (props) => {\r\n    const [blog, setBlog] = useState({});\r\n    const slug = useParams().id;\r\n\r\n    \r\n    const fetchData = async () => {\r\n        console.log('slub : ', slug)\r\n        try {\r\n            const res = await axios.get(`http://127.0.0.1:8000/api/blog/${slug}`);\r\n            console.log('res : ', res)\r\n            setBlog(res.data);\r\n        }\r\n        catch (err) {\r\n            console.log('err : ', err)\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    const createBlog = () => {\r\n        return {__html: blog.content}\r\n    };\r\n\r\n    const capitalizeFirstLetter = (word) => {\r\n        if (word)\r\n            return word.charAt(0).toUpperCase() + word.slice(1);\r\n        return '';\r\n    };\r\n\r\n    return (\r\n        <div className='container mt-3'>\r\n            <h1 className='display-2'>{blog.title}</h1>\r\n            <h2 className='text-muted mt-3'>Category: {capitalizeFirstLetter(blog.category)}</h2>\r\n            <h4>{blog.month} {blog.day}</h4>\r\n            <div className='mt-5 mb-5' dangerouslySetInnerHTML={createBlog()} />\r\n            <hr />\r\n            <p className='lead mb-5'><Link to='/blog' className='font-weight-bold'>Back to Blogs</Link></p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BlogDetail;","C:\\ToyProject\\FullStack\\BLOG\\frontend\\src\\components\\Blog.js",[],"C:\\ToyProject\\FullStack\\BLOG\\frontend\\src\\hocs\\Layout.js",[],"C:\\ToyProject\\FullStack\\BLOG\\frontend\\src\\components\\Navbar.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":36,"column":8,"nodeType":"48","endLine":36,"endColumn":24,"suggestions":"49"},{"ruleId":"46","severity":1,"message":"50","line":36,"column":9,"nodeType":"51","endLine":36,"endColumn":23},{"ruleId":"46","severity":1,"message":"52","line":25,"column":8,"nodeType":"48","endLine":25,"endColumn":10,"suggestions":"53"},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'category'. Either include it or remove the dependency array.","ArrayExpression",["56"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["57"],"no-global-assign","no-unsafe-negation",{"desc":"58","fix":"59"},{"desc":"60","fix":"61"},"Update the dependencies array to be: [category]",{"range":"62","text":"63"},"Update the dependencies array to be: [fetchData]",{"range":"64","text":"65"},[1011,1027],"[category]",[649,651],"[fetchData]"]